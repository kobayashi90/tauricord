### .github/workflows/build-linux.yml
name: Tauri Linux Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-linux:
    name: Build for Linux (AppImage)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Tauri CLI globally
        run: npm install -g @tauri-apps/cli

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: linux-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: linux-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-cargo-build-

      - name: Build Tauri app for Linux
        run: tauri build --release

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: target/release/bundle/appimage/*.AppImage
          if-no-files-found: warn
          
  # Du kannst analog den Windows-Job anpassen und dort ebenfalls Node.js + npm nutzen
